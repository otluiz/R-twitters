### R code from vignette source 'ch-regression.rnw'
gc()
plot(cpi, xaxt="n", ylab="CPI", xlab="")
year <- rep(2008:2010, each=4)
quarter <- rep(1:4, 3)
171.0, 172.1, 173.3, 174.0)
cpi <- c(162.2, 164.6, 166.5, 166.0,
166.2, 167.0, 168.6, 169.5,
171.0, 172.1, 173.3, 174.0)
plot(cpi, xaxt="n", ylab="CPI", xlab="")
axis(1, labels=paste(year,quarter,sep="Q"), at=1:12, las=3)
cor(year,cpi)
cor(quarter,cpi)
fit <- lm(cpi ~ year + quarter)
fit
fit$coefficients[[3]]*(1:4))
(cpi2011 <- fit$coefficients[[1]] + fit$coefficients[[2]]*2011 +
fit$coefficients[[3]]*(1:4))
(cpi2011 <- fit$coefficients[[1]] + fit$coefficients[[2]]*2011 +
fit$coefficients[[3]]*(1:4))
(cpi2011 <- fit$coefficients[[1]] + fit$coefficients[[2]]*2011 +
fit$coefficients[[3]]*(1:4))
###################################################
attributes(fit)
fit$coefficients
residuals(fit)
summary(fit)
layout(matrix(c(1,2,3,4),2,2)) # 4 graphs per page
layout(matrix(c(1,2,3,4),2,2)) # 4 graphs per page
plot(fit)
plot(fit)
library(scatterplot3d)
s3d <- scatterplot3d(year, quarter, cpi, highlight.3d=T, type="h", lab=c(2,3))
s3d$plane3d(fit)
data2011 <- data.frame(year=2011, quarter=1:4)
cpi2011 <- predict(fit, newdata=data2011)
style <- c(rep(1,12), rep(2,4))
plot(c(cpi, cpi2011), xaxt="n", ylab="CPI", xlab="", pch=style, col=style)
axis(1, at=1:16, las=3,
labels=c(paste(year,quarter,sep="Q"), "2011Q1", "2011Q2", "2011Q3", "2011Q4"))
data("bodyfat", package="mboost")
myFormula <- DEXfat ~ age + waistcirc + hipcirc + elbowbreadth + kneebreadth
bodyfat.glm <- glm(myFormula, family = gaussian("log"), data = bodyfat)
summary(bodyfat.glm)
pred <- predict(bodyfat.glm, type="response")
data("bodyfat", package="mboost")
rm(list = ls())
gc()
t <- rep(100:150, each=3)
t
ano <- rep(2008:2010, each = 4)
ano
q <- rep(1:4, 3)
q
cpi
cpi <- c(162.2, 164.6, 166.5, 166.0,
166.2, 167.0, 168.6, 169.5,
171.0, 172.1, 173.3, 174.0)
cpi
library(twitteR)
load(file = "data/rdmTweets.RData")
(nDocs <- length(rdmTweets))
rm(list = ls())
gc()
library(twitteR)
load(file = "data/rdmTweets.RData")
load(file = "data/rdmTweets.RData")
load(file = "../data/rdmTweets.RData")
(nDocs <- length(rdmTweets))
for (i in 11:15) {
cat(paste("[[", i, "]] ", sep=""))
writeLines(strwrap(rdmTweets[[i]]$getText(), width=73))
}
df <- do.call("rbind", lapply(rdmTweets, as.data.frame))
dim(df)
library(tm)
myCorpus <- Corpus(VectorSource(df$text))
library("ggplot2", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
install.packages("Corpus")
installed.packages("tm", dependencies=TREUE)
installed.packages("tm", dependencies=TRUE
)
installed.packages("tm", dependencies=TRUE)
installed.packages("tm")
installed.packages("SLAM")
installed.packages("slam")
library(tm)
gc()
rm(list = ls())
year <- rep(2008:2010, each=4)
quarter <- rep(1:4, 3)
cpi <- c(162.2, 164.6, 166.5, 166.0,
166.2, 167.0, 168.6, 169.5,
171.0, 172.1, 173.3, 174.0)
plot(cpi, xaxt="n", ylab="CPI", xlab="")
axis(1, labels=paste(year,quarter,sep="Q"), at=1:12, las=3)
axis(1, labels=paste(year,quarter,sep="Q"), at=1:12, las=3)
cor(year,cpi)
cor(year,cpi)
cor(quarter,cpi)
fit <- lm(cpi ~ year + quarter)
fit
(cpi2011 <- fit$coefficients[[1]] + fit$coefficients[[2]]*2011 +
fit$coefficients[[3]]*(1:4))
attributes(fit)
fit$coefficients
residuals(fit)
summary(fit)
layout(matrix(c(1,2,3,4),2,2)) # 4 graphs per page
plot(fit)
data2011 <- data.frame(year=2011, quarter=1:4)
View(data2011)
cpi2011 <- predict(fit, newdata=data2011)
View(data2011)
cpi2011 <- predict(fit, newdata=data2011)
style <- c(rep(1,12), rep(2,4))
plot(c(cpi, cpi2011), xaxt="n", ylab="CPI", xlab="", pch=style, col=style)
axis(1, at=1:16, las=3,
labels=c(paste(year,quarter,sep="Q"), "2011Q1", "2011Q2", "2011Q3", "2011Q4"))
data("bodyfat", package="mboost")
data("bodyfat", package="mboost")
library("ggplot2", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
library("NLP", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
library("plyr", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
library("RCurl", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
detach("package:RCurl", unload=TRUE)
library("reshape2", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
library("data.table", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
install.packages(c("data.table", "ggplot2", "party", "reshape2"))
install.packages("mboost")
data("bodyfat", package="mboost")
library("mboost", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
data("bodyfat", package="mboost")
install.packages("mboost")
install.packages("mboost")
data("bodyfat", package="mboost")
library(mboost)
data("bodyfat", package="mboost")
package?mboost
data("bodyfat", package="mboost")
data("bodyfat", package="TH.data")
myFormula <- DEXfat ~ age + waistcirc + hipcirc + elbowbreadth + kneebreadth
bodyfat.glm <- glm(myFormula, family = gaussian("log"), data = bodyfat)
summary(bodyfat.glm)
pred <- predict(bodyfat.glm, type="response")
plot(bodyfat$DEXfat, pred, xlab="Observed Values", ylab="Predicted Values")
abline(a=0, b=1)
library(readr)
prfCalculoTaxas <- read_csv("~/workspace/R/data/prfCalculoTaxas.csv")
View(prfCalculoTaxas)
plot(prfCalculoTaxas$Hour, xaxt="n", ylab = "Km", xlab = "")
hora = rep(00:00,23:59,3)
plot(cpi, xaxt="n", ylab="CPI", xlab="")
axis(1, labels=paste(year,quarter,sep="Q"), at=1:12, las=3)
axis(1, labels = paste(prfCalculoTaxas$KMArredondado[BR=232],sep = "h"),at=1:12, las=3)
axis(1, labels = paste(prfCalculoTaxas$KMArredondado[BR=232],sep = "h"),at=1:24, las=3)
axis(1, labels = paste(prfCalculoTaxas$KMArredondado[BR=232],sep = "h"),at=1:1, las=3)
plot(prfCalculoTaxas$Hour, xaxt="n", ylab = "Km", xlab = "")
#axis(1, labels=paste(year,quarter,sep="Q"), at=1:12, las=3)
axis(1, labels = paste(prfCalculoTaxas$KMArredondado[BR=232],sep = "h"),at=1:1, las=3)
hora = rep(00:00,23:59,3)
plot(prfCalculoTaxas$Hour, xaxt="n", ylab = "Km", xlab = "")
axis(1, labels = paste(prfCalculoTaxas$KMArredondado[BR=232],sep = "h"),at=1:1, las=3)
cor(prfCalculoTaxas$KMArredondado,prfCalculoTaxas$Hour)
cor(year,cpi)
cor(quarter,cpi)
cor(prfCalculoTaxas$RestrVisibili,prfCalculoTaxas$KMArredondado)
cor(prfCalculoTaxas$tx_RestVisibi,prfCalculoTaxas$tx_TipoAcident)
cor(prfCalculoTaxas$BR,prfCalculoTaxas$CondPista)
rm(list = ls())
gc()
prfCalculoTaxas <- read_csv("~/workspace/R/data/prfNumerico.csv")
prfCalculoTaxas <- read_csv("~/workspace/R/data/prfNumerico.csv")
prfNumerico <- read_csv("~/workspace/R/data/prfNumerico.csv")
hora = rep(00:00,23:59,5)
cor(prfNumerico$CondPista,prfNumerico$Hour)
cor(prfNumerico$RestrVisibili,prfNumerico$TipoAcident)
cor(prfNumerico$RestrVisibili,prfNumerico$CausaAcident)
cor(prfNumerico$RestrVisibili,prfNumerico$TracadoVia)
cor(prfNumerico$RestrVisibili,prfNumerico$TipoAuto)
cor(prfNumerico$RestrVisibili,prfNumerico$TipoAuto) #####
cor(prfNumerico$RestrVisibili,prfNumerico$DiaDaSemana)
cor(prfNumerico$RestrVisibili,prfNumerico$DiaDaSemana)
cor(prfNumerico$RestrVisibili,prfNumerico$TipoAuto) ##### -0.01537365
cor(prfNumerico$RestrVisibili,prfNumerico$DiaDaSemana)
cor(prfNumerico$RestrVisibili,prfNumerico$Hour)
cor(prfNumerico$RestrVisibili,prfNumerico$KMArredondado)
cor(prfNumerico$CondPista,prfNumerico$RestrVisibili)
cor(prfNumerico$CondPista,prfNumerico$TipoAcident)
br232 = prfCalculoTaxas$KMArredondado[BR=232]
cor(prfNumerico$CondPista,prfNumerico$CausaAcident)
cor(prfNumerico$CondPista,prfNumerico$TracadoVia)
cor(prfNumerico$CondPista,prfNumerico$TipoAuto)
cor(prfNumerico$CondPista,prfNumerico$Gravidade)
cor(prfNumerico$CondPista,prfNumerico$DiaDaSemana)
cor(prfNumerico$CondPista,prfNumerico$Hour)
cor(prfNumerico$CondPista,prfNumerico$KMArredondado)
cor(prfNumerico$CondPista,prfNumerico$Delegacia)
cor(prfNumerico$CondPista,prfNumerico$BR)
View(prfNumerico)
for(i in 1:nrow(dfN)){
if(dfn[i,8] == "FALSE") { dfn[i,"Gravidade"] = 0 }
if(dfn[i,8] == "TRUE" ) { dfn[i,"Gravidade"] = 0 }
}
dfN <- read_csv("~/workspace/R/data/prfNumerico.csv")
for(i in 1:nrow(dfN)){
if(dfn[i,8] == "FALSE") { dfn[i,"Gravidade"] = 0 }
if(dfn[i,8] == "TRUE" ) { dfn[i,"Gravidade"] = 0 }
}
for(i in 1:nrow(dfN)){
if(dfN[i,8] == "FALSE") { dfN[i,"Gravidade"] = 0 }
if(dfN[i,8] == "TRUE" ) { dfN[i,"Gravidade"] = 0 }
}
View(dfN)
View(prfNumerico)
for(i in 1:nrow(dfN)){
if(dfN[i,"Gravidade"] == "FALSE") { dfN[i,"Gravidade"] = 0 }
if(dfN[i,"Gravidade"] == "TRUE" ) { dfN[i,"Gravidade"] = 1 }
}
dfN <- read_csv("~/workspace/R/data/prfNumerico.csv")
View(dfN)
View(dfN)
View(dfN)
View(dfN)
View(dfN)
View(dfN)
rm(list = ls())
()
gc()
dfN <- read_csv("~/workspace/R/data/prfNumerico.csv")
View(dfN)
for(i in 1:nrow(dfN)){
if(dfN[i,"Gravidade"] == "FALSE") { dfN[i,"Gravidade"] = 0 }
if(dfN[i,"Gravidade"] == "TRUE" ) { dfN[i,"Gravidade"] = 1 }
}
View(dfN)
(dfN$CondPista,dfN$Gravidade)
cor(dfN$CondPista,dfN$Gravidade) ####### -0.0009133167
cor(dfN$RestrVisibili,dfN$Gravidade)
cor(dfN$RestrVisibili,dfN$RestrVisibili)
cor(dfN$RestrVisibili,dfN$Delegacia)
cor(dfN$RestrVisibili,dfN$BR)
cor(dfN$TipoAcident,dfN$BR)
cor(dfN$TipoAcident,dfN$CondPista)
cor(dfN$TipoAcident,dfN$RestrVisibili)
cor(dfN$TipoAcident,dfN$CausaAcident)
cor(dfN$TipoAcident)
cor(dfN$TipoAcident,dfN$TracadoVia)
cor(dfN$TipoAcident,dfN$TipoAuto)
cor(dfN$TipoAcident,dfN$Gravidade)
cor(dfN$TipoAcident,dfN$DiaDaSemana)
cor(dfN$TipoAcident,dfN$Hour)
cor(dfN$TipoAcident,dfN$KMArredondado)
cor(dfN$TipoAcident,dfN$Delegacia)
cor(dfN$TipoAcident,dfN$tx_RestVisibi)
cor(dfN$TipoAcident,dfN$tx_CondPista)
cor(dfN$CausaAcident,dfN$BR)
cor(dfN$CausaAcident,dfN$CondPista)
cor(dfN$CausaAcident,dfN$TipoAcident)
cor(dfN$CausaAcident,dfN$TracadoVia)
cor(dfN$CausaAcident,dfN$TipoAuto)
cor(dfN$CausaAcident,dfN$Gravidade)
cor(dfN$CausaAcident,dfN$DiaDaSemana)
cor(dfN$CausaAcident,dfN$Hour)
cor(dfN$CausaAcident,dfN$KMArredondado)
cor(dfN$CausaAcident,dfN$Delegacia)
cor(dfN$CausaAcident,dfN$tx_CausaAcident)
cor(dfN$CausaAcident,dfN$tx_CondPista)
cor(dfN$CausaAcident,dfN$tx_TipoAcident)
cor(dfN$CausaAcident,dfN$tx_TracadoVia)
cor(dfN$CausaAcident,dfN$CondPista)
cor(dfN$CausaAcident,dfN$TracadoVia)
cor(dfN$CausaAcident,dfN$TipoAuto)
cor(dfN$CausaAcident,dfN$Gravidade)
cor(dfN$CausaAcident,dfN$DiaDaSemana)
cor(dfN$CausaAcident,dfN$Hour)
cor(dfN$CausaAcident,dfN$KMArredondado)
cor(dfN$CausaAcident,dfN$Delegacia)
cor(dfN$TracadoVia,dfN$BR)
cor(dfN$TracadoVia,dfN$RestrVisibili)
cor(dfN$TracadoVia,dfN$TipoAuto)
cor(dfN$TracadoVia,dfN$Gravidade)
cor(dfN$TracadoVia,dfN$DiaDaSemana)
cor(dfN$TracadoVia,dfN$Hour)
cor(dfN$TracadoVia,dfN$KMArredondado)
cor(dfN$TracadoVia,dfN$Delegacia)
cor(dfN$TipoAuto,dfN$BR)
#cor(dfN$TipoAuto,dfN$CondPista)
#cor(dfN$TipoAuto,dfN$RestrVisibili)
#cor(dfN$TipoAuto,dfN$TipoAcident)
#cor(dfN$TipoAuto,dfN$CausaAcident)
#cor(dfN$TipoAuto,dfN$TracadoVia)
cor(dfN$TipoAuto,dfN$Gravidade)
cor(dfN$TipoAuto,dfN$DiaDaSemana)
cor(dfN$TipoAuto,dfN$Hour)
cor(dfN$TipoAuto,dfN$KMArredondado)
cor(dfN$TipoAuto,dfN$Delegacia)
cor(dfN$Gravidade,dfN$DiaDaSemana)
cor(dfN$Gravidade,dfN$Hour)
cor(dfN$Gravidade,dfN$KMArredondado)
cor(dfN$Gravidade,dfN$Delegacia)
cor(dfN$Gravidade,dfN$BR)
cor(dfN$TracadoVia,dfN$TipoAcident)
cor(dfN$TracadoVia,dfN$BR) ##############  0.0127905
cor(dfN$TracadoVia,dfN$TipoAcident)
cor(dfN$DiaDaSemana,dfN)
cor(dfN$DiaDaSemana,dfN$BR)
cor(dfN$DiaDaSemana,dfN$Hour)
cor(dfN$DiaDaSemana,dfN$KMArredondado)
cor(dfN$DiaDaSemana,dfN$Delegacia)
cor(dfN$DiaDaSemana,dfN$Hour)
cor(dfN$DiaDaSemana,dfN$KMArredondado)
cor(dfN$DiaDaSemana,dfN$Delegacia)
cor(dfN$BR,dfN$CondPista)
cor(dfN$BR,dfN$RestrVisibili)
cor(dfN$BR,dfN$TipoAcident)
cor(dfN$BR,dfN$CausaAcident)
cor(dfN$BR,dfN$TracadoVia)
cor(dfN$BR,dfN$TipoAuto)
cor(dfN$BR,dfN$Gravidade)
cor(dfN$BR,dfN$DiaDaSemana)
cor(dfN$BR,dfN$Hour)
cor(dfN$BR,dfN$KMArredondado)
cor(dfN$BR,dfN$Delegacia)
cor(dfN$Hour,dfN$BR)
cor(dfN$Hour,dfN$KMArredondado)
cor(dfN$Hour,dfN$Delegacia)
cor(dfN$Hour,dfN$KMArredondado)
cor(dfN$Hour,dfN$Delegacia)
cor(dfN$KMArredondado,dfN$BR)
cor(dfN$KMArredondado,dfN$DiaDaSemana)
cor(dfN$KMArredondado,dfN$Delegacia)
cor(dfN$KMArredondado,dfN$CondPista)
cor(dfN$KMArredondado,dfN$RestrVisibili)
cor(dfN$KMArredondado,dfN$TipoAcident)
cor(dfN$KMArredondado,dfN$CausaAcident)
cor(dfN$KMArredondado,dfN$TracadoVia)
cor(dfN$KMArredondado,dfN$TipoAuto)
cor(dfN$KMArredondado,dfN$BR)
cor(dfN$KMArredondado,dfN$BR)
cor(year,cpi)
cor(quarter,cpi)
year <- rep(2008:2010, each=4)
quarter <- rep(1:4, 3)
cpi <- c(162.2, 164.6, 166.5, 166.0,
166.2, 167.0, 168.6, 169.5,
171.0, 172.1, 173.3, 174.0)
cor(year,cpi)
cor(quarter,cpi)
fit <- lm(dfN$KMArredondado ~ dfN$Delegacia + dfN$TipoAcident + dfN$TracadoVia + dfN$BR + dfN$Delegacia)
fit
fit <- lm(cpi ~ year + quarter)
fit
(cpi2011 <- fit$coefficients[[1]] + fit$coefficients[[2]]*2011 +
fit$coefficients[[3]]*(1:4))
attributes(fit)
fit$coefficients
residuals(fit)
summary(fit)
library(scatterplot3d)
s3d <- scatterplot3d(year, quarter, cpi, highlight.3d=T, type="h", lab=c(2,3))
s3d$plane3d(fit)
(cpi2011 <- fit$coefficients[[1]] + fit$coefficients[[2]]*2011 +
fit$coefficients[[3]]*(1:4))
reg <- fit$coefficients[[1]] + fit$coefficients[[2]] + fit$coefficients[[3]]
attributes(fit)
fit$coefficients
residuals(fit)
summary(fit)
plot(fit)
