c<-75.3
typeof(c)
b<-as.integer(8)
typeof(b)
is.integer(b)
typeof(grade <- B)
typeof(grade <- b)
typeof(grade <- "B")
ages <- c(10, 23, 42)
ages[1]
ages[-1]
ages[-2]
ages[-3]
ages[length(ages)]
evens <- seq(from=2, to=12, by=2)
str(evens)
evens<-as.integer(evens)
evens<-as.integer(evens)
digits <- 0:9
digits
salarios <- c(14.35, 23,25)
salarios*1.1
salarios <- salarios * 1.10
quit()
names(prf)
prf
set.seed(1)
y <-rnorm(101)
x <- seq(from=0, to=100, by=1)
plot(x, y, col=ifelse(y>0,"blue","red"))
x <- rnorm(100)
y=rpois(100)
y <- rpois(100)
y <- seq(from = 0, to = 100, by = 1)
pdf("~/Mestrado/DadosPRF/Graficos/teste.pdf", width=20, height=14)
plot(x,y)
> set.seed(1)
> y <-rnorm(101)
x <- seq(from=0, to=100, by=1)
y <- rnorm(100)
pdf("~/Mestrado/DadosPRF/Graficos/teste.pdf", width=20, height=14)
plot(x,y)
x <- 1:10
y <- x^2
z <- rnorm(n=10, mean=y, sd=5)
plot(x,y)
plot(x, y, type="1")
plot(x, y, type="b")
quit()
dim(iris)
dim(prf)
names(iris)
str(iris)
attributes(iris)
iris[1:3,]
head((iris,3)
head((iris,3))
head(iris,3)
tail(iris, 3)
iris[1:10, "Sepal.length"]
iris[1:10, "Sepal.Length"]
iris$Sepal.Length[1:10]
summary(iris)
library(Hmisc)
describe(iris[, c(1,5)])
library(Hmisc)
install.packages('ggplot2')
install.packages('Hmisc')
install.packages('stringi')
library(Hmisc)
describe(iris[, c[1, 5])])
describe(iris[, c(1, 5)])
range(iris$Sepal.Length)
quantile(iris$Sepal.Length)
var(iris$Sepal.Length)
hist(iris$Sepal.Length)
plot(density(iris$Sepal.Length))
table(iris$Species)
pie(table(iris$Species))
barblot(table(iris$Species))
barplot(table(iris$Species))
cor(iris$Sepal.Length, iris$Petal.Length)
cov(iris$Sepal.Length, iris$Petal.Length)
cov(iris[, 1:4])
aggregate(Sepal.Length ~ Species, summary, data = iris)
boxplot(Sepal.Length ~ Species, summary, data = iris)
with(iris, plot(Sepal.Length, Sepal.Width, col = Species, pch = as.numeric(Species)))
plot(jitter(iris$Sepal.Length), jitter(iris$Sepal.Width))
pairs.default
pairs(iris)
library(scatterplot3d)
install.packages(scatterplot3d)
install.packages(scatterplot3d)
install.packages(scatterplot3d)
library(scatterplot3d)
scatterplot3d(iris$Petal.Width, iris$Sepal.Length, iris$Sepal.Width)
library(rgl)
install.packages(rgl)
library(rgl)
plot3d(iris$Petal.Width, iris$Sepal.Length, iris$Sepal.Width)
scatterplot3d(iris$Petal.Width, iris$Sepal.Length, iris$Sepal.Width)
dist.matrix <- as.matrix(dist(iris[, 1:4]))
heatmap(dist.matrix)
library(lattice)
levelplot(Petal.Width ~ Sepal.Length * Sepal.Width, iris, cuts=9, col.regions=rainbow(21)[10:1])
levelplot(Petal.Width ~ Sepal.Length * Sepal.Width, iris, cuts=9, col.regions=rainbow(10)[10:1])
levelplot(Petal.Width ~ Sepal.Length * Sepal.Width, iris, cuts=9, col.regions=rainbow(5)[10:1])
levelplot(Petal.Width ~ Sepal.Length * Sepal.Width, iris, cuts=9, col.regions=rainbow(21)[10:1])
filled.contour(volcano, color=terrain.colors, asp=1, plot.axes=cov2cor add=T)
filled.contour(volcano, color=terrain.colors, asp=1, add=T)
filled.contour(volcano, color=terrain.colors, asp=1, plot.axes=coord_polar, add=T)
persp(volcano, theta=25, phi=30, expand=0.5, col="lightblue")
library(ggplot2)
qplot(Sepal.Length, Sepal.Width, data=iris, facets=Species ~ .)
pdf(~/image/myPlot.pdf)
pdf(/home/otluiz/image/myPlot.pdf)
pdf(image/myPlot.pdf)
pdf("image/myPlot.pdf")
pdf("image/myPlot.pdf")
pdf("myPlot.pdf")
x<-1:50
plot(x, log(x))
graphics.off()
quit
quit()
load("~/.RData")
str(iris)
set.seed(1234)
ind <- sample(2, nrow(iris), replace=T, prob=c(0.7,0.3)
)
iris.train <- iris[ind==1, ]
iris.test <- iris[ind==2, ]
library(party)
install.packages(party)
require(rpart)
require(party)
require(nnet)
require(neuralnet)
library(rpart)
iris.formula <- Species ~ Sepal.Length + Sepal.Width + Petal.Length + Petal.Width
iris.tree <- ctree(iris.formula, data=iris.train)
iris.tree <- tree(iris.formula, data=iris.train)
install.packages("party")
library(party)
iris.tree <- ctree(iris.formula, data=iris.train)
plot(iris.ctree)
iris.formula <- (Species ~ Sepal.Length + Sepal.Width + Petal.Length + Petal.Width)
iris.tree <- ctree(iris.formula, data=iris.train)
plot(iris.ctree)
iris.train
iris.test
library(party)
iris.formula <- (Species ~ Sepal.Length + Sepal.Width + Petal.Length + Petal.Width)
iris.ctree <- ctree(iris.formula, data=iris.train)
plot(iris.ctree)
pred <- predict(iris.ctree, newdata=iris.test)
table(pred, iris.test$Species)
library(twitterR)
install.packages("twitterR")
library(twitteR)
install.packages("twitteR")
library(twitteR)
quit(0
)
yes
y
quit()
library(twitteR)
install.packages("twitteR")
install.packages("twitteR")
install.packages("twitteR")
library(twitteR)
tweets <- userTimeline("RDataMining", n=3200)
install.packages("RCurl")
tweets <- userTimeline("RDataMining", n=3200)
url <- "http://www.rdatamining.com/data/rdmTweets.Rdata")
url <- "http://www.rdatamining.com/data/rdmTweets.Rdata"
download.file(url, destfile="./data/rdmTweets.Rdata")
download.file(url, destfile=".data/rdmTweets.Rdata"/data/rdmTweets.Rdata")
)
q()
download.file(url, destfile="./data/rdmTweets.Rdata")
url <- "http://www.rdatamining.com/data/rdmTweets.Rdata"
url <- "workspace/R/rdmTweets.RData"
url <- "http://www.rdatamining.com/data/rdmTweets.RData")
url <- "http://www.rdatamining.com/data/rdmTweets.RData"
download.file(url, destfile="./data/rdmTweets.RData")
download.file(url1, destfile="./data/rdmTweets.RData")
url <- "workspace/R/rdmTweets.RData"
download.file(url, destfile="./data/rdmTweets.RData")
url1 <- "http://www.rdatamining.com/data/rdmTweets.RData"
download.file(url1, destfile="./data/rdmTweets.RData")
load(file = "workspace/R/rdmTweets.RData")
(n.tweet <- length(tweets))
n.tweet <- length(tweets)
load(file = "workspace/R/rdmTweets.RData") (n.tweet <-length(tweet))
load(file = "workspace/R/rdmTweets.RData")
(n.tweet <-length(tweet))
(n.tweet <-length(tweets))
strwrap(tweet[[1]]$text, width=55)
url <- "http://www.rdatamining.com/data/rdmTweets.RData"
download.file(url, destfile="./data/rdmTweets.RData")
download.file(url, destfile="./data/rdmTweets.RData")
download.file(url, destfile="workspace/R/rdmTweets.RData"
)
setup_twitter_oauth("anaJjxUVp0HkW4OK13g7vKKgR","a8W2qQ5a43b85SDm5mLtKTXUOgElMfcLP5ILVBMe1non1jIhL4
")
setup_twitter_oauth("anaJjxUVp0HkW4OK13g7vKKgR","a8W2qQ5a43b85SDm5mLtKTXUOgElMfcLP5ILVBMe1non1jIhL4)
setup_twitter_oauth("anaJjxUVp0HkW4OK13g7vKKgR","a8W2qQ5a43b85SDm5mLtKTXUOgElMfcLP5ILVBMe1non1jIhL4")
tweets <- searchTwitter('#rstats', n=50)
library(twitteR)
setup_twitter_oauth("anaJjxUVp0HkW4OK13g7vKKgR","a8W2qQ5a43b85SDm5mLtKTXUOgElMfcLP5ILVBMe1non1jIhL4")
rdmTweets<-userTimeline("rdatamining", n=100)
setup_twitter_oauth("gMgM98BADb4kiH4Y0M7AD5gw3", "YA7l1GF6iLfdd8H0ybS9iBgBKXIhsWm0Nu89mHpnMnPcqpwYnZ")
setup_twitter_oauth("gMgM98BADb4kiH4Y0M7AD5gw3", "YA7l1GF6iLfdd8H0ybS9iBgBKXIhsWm0Nu89mHpnMnPcqpwYnZ", "528603134-F4XrgrN8v5jwzxEvxeHIKjyMxajclVEVnToGYS7x", "GALsD4zAoopfgLrpBPR4apboUsN6tc0bMo3pLTeAc7nW1
")
consumer_key <- 'gMgM98BADb4kiH4Y0M7AD5gw3'
consumer_secret <-'YA7l1GF6iLfdd8H0ybS9iBgBKXIhsWm0Nu89mHpnMnPcqpwYnZ
'
access_token <- '528603134-F4XrgrN8v5jwzxEvxeHIKjyMxajclVEVnToGYS7x'
token_secret <- 'GALsD4zAoopfgLrpBPR4apboUsN6tc0bMo3pLTeAc7nW1'
consumer_key
consumer_secret
access_token
token_secret
setup_twitter_oauth(consumer_key, consumer_secret, access_token, token_secret)
setup_twitter_oauth(consumer_key, consumer_secret, access_token=NULL, access_secret=NULL)
setup_twitter_oauth(consumer_key, consumer_secret, access_token, token_secret)
consumer_secret
consumer_key <- 'gMgM98BADb4kiH4Y0M7AD5gw3'
consumer_secret <-'YA7l1GF6iLfdd8H0ybS9iBgBKXIhsWm0Nu89mHpnMnPcqpwYnZ'
access_token <- '528603134-F4XrgrN8v5jwzxEvxeHIKjyMxajclVEVnToGYS7x'
token_secret <- 'GALsD4zAoopfgLrpBPR4apboUsN6tc0bMo3pLTeAc7nW1'
setup_twitter_oauth(consumer_key, consumer_secret, access_token, token_secret)
rdmTweets <- userTimeline("rdatamining", n=100)
rdmTweets[1:3]
tweets <- searchTwitter('#prf', n=100)
tweets[1:10]
tweets <- searchTwitter('@PRF191PE', n=100)
tweets <- searchTwitter('@PRF191PE', n=29)
tweets[1:20]
q()
input <- mtcars[,c("am","cyl","hp","wt")]
print(head(input))
am.data = glm(formula = am ~ cyl+hp+wt, data = input, family = binomial)
print(summary(am.data))
dev.off()
png(file="decisionTreeCarros.png")
output.tree <- ctree(am ~ cyl + hp + wt, data = input)
library(party)
output.tree <- ctree(am ~ cyl + hp + wt, data = input)
plot(output.tree)
dev.off()
q()
## install R packages from CRAN
packages <- c("arules", "arulesViz", "cluster", "data.table", "fpc",
"ggplot2", "graph",
"Hmisc", "igraph", "knitr", "party",
"randomForest", "rgl", "ROCR", "RODBC",
"scatterplot3d", "SnowballC",
"TH.data", "topicmodels", "tm", "twitteR",
"wordcloud", "xlsx")
install.packages(packages)
## install R packages from Bioconductor
source("http://bioconductor.org/biocLite.R")
install.packages(packages)
install.packages(packages)
install.packages(packages)
## install R packages from CRAN
packages <- c("arules", "arulesViz", "cluster", "data.table", "fpc",
"ggplot2", "graph",
"Hmisc", "igraph", "knitr", "party",
"randomForest", "rgl", "ROCR", "RODBC",
"scatterplot3d", "SnowballC",
"TH.data", "topicmodels", "tm", "twitteR",
"wordcloud", "xlsx")
install.packages(packages)
## install R packages from Bioconductor
source("http://bioconductor.org/biocLite.R")
biocLite("Rgraphviz")
install.packages(packages)
install.packages(packages)
install.packages(packages)
riqueza <- c(15,18,22,24,25,30,31,34,37,39,41,45)
area <- c(2,4.5,6,10,30,34,50,56,60,77.5,80,85)
area.cate <- rep(c(“pequeno”, “grande”), each=6)
area.cate <- rep(c(“pequeno”, “grande”), each=6)
area
area.cate <- rep(c("pequeno", "grande"), each=6)
plot(riqueza~area
)
boxplot(riqueza~area.cate, bty="l", tcl=0.3)
boxplot(riqueza~area.cate, bty="l")
boxplot(riqueza~area.cate, bty="l", tcl=0.3)
boxplot(riqueza~area.cate, bty="l")
lines(lowness(area, riqueza))
lines(loess(area, riqueza))
lines(gam(area, riqueza))
library(TeachingDemos)
library(splines)
lines(gam(area, riqueza))
lines(loess(area, riqueza))
lines(lowness(area, riqueza))
install.packages("TeachingDemos")
lines(lowness(area, riqueza))
par(bty="l")
par(tcl=0.3)
boxplot(riqueza~area.cate)
boxplot(riqueza~area.cate, bty="l", tcl=0.3)
par(tcl=0.3)
par(bty="l")
boxplot(riqueza~area.cate)
getwd()
setwd("workspace/R")
getwd()
source("prfAcidentes.R")
source("src/prfLimpoCheiroso.R")
getwd()
ls
dir
q()
load("~/workspace/R/src/rdmTweets.RData")
View(dfw)
View(dfn)
